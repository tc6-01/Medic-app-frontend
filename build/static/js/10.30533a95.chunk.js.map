{"version":3,"file":"static/js/10.30533a95.chunk.js","mappings":"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","sources":["components/common/LoadingProgress/index.tsx","components/pdf-preview/index.tsx","pages/pdf-preview/index.tsx","service/medic.ts","states/page/file-share/index.ts","utils/time.ts"],"sourcesContent":["import { Box, CircularProgress, Skeleton } from \"@mui/material\"\r\nimport { ReactNode } from \"react\"\r\nimport { LoadingProps } from \"src/types/ComponentProps\"\r\n\r\n\r\nconst Loading = ({ loading, children }: LoadingProps) => {\r\n    if (loading) {\r\n        return <CircularProgress sx={{\r\n            position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%,-50%)'\r\n        }} />\r\n    }\r\n    else {\r\n        return <>{children}</>\r\n    }\r\n}\r\n\r\nexport default Loading\r\n","// ** MUI Imports\r\n\r\n// ** Demo Components Imports\r\nimport { Box, Stack } from '@mui/material';\r\nimport { Container } from '@mui/system';\r\nimport { useEffect, useState } from 'react';\r\nimport PDF from \"react-pdf-js\";\r\nimport Loading from '../common/LoadingProgress';\r\nimport './styles.css';\r\nimport { downloadFile } from 'src/service/medic';\r\nimport { FileItemData } from 'src/types/ComponentProps';\r\nimport { toLocalTimeString } from 'src/utils/time';\r\nimport { FileEdit } from 'mdi-material-ui';\r\nconst PdfPreviewWrapper = (props) => {\r\n  const [pdfblob, setPdfBlob] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [totalPage, setTotalPages] = useState(1);\r\n  // console.log(\"组件传递数据\",props.file)\r\n  // 需要将文件字段进行整合，方便统一操作\r\n  // 拥有的病历与共享得到的病历最大的区别在于state字段，被共享的病历是fromShared状态\r\n  // 从file-mange的病历具有state字段\r\n  // 从shareByMe有target字段\r\n  // 从shareToMe有from字段\r\n  // 如果目标用户或者发起共享用户为当前用户，\r\n const fileData = props.file as {state:string, target:string,from:string,owner:string, fileName:string, expire: number, use:number, useLimit:number}\r\n  // 需要判断传递过来的病历是否为当前用户所有，如果是就不需要进行可预览次数更新，否则需要进行更新\r\n\r\n  useEffect(() => {\t//重点在此！！！！！如何将PDF文件流转base64\r\n    // 进行文件可访问次数的更新\r\n    if(fileData.state === \"owned\" || fileData.state === \"fromShared\"){\r\n      console.log(\"no need to update\")\r\n    }\r\n    downloadFile(fileData.fileName,fileData.state).then(res => {\r\n      let blob = new Blob([res], { type: \"application/pdf\" })\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(blob); // 转换为base64，可以直接放入a标签href\r\n      reader.addEventListener(\"load\", function () {\r\n        let base64 = reader.result as string\r\n        setPdfBlob(base64.split(',')[1])\r\n        setLoading(false)\r\n      });\r\n    })\r\n  }, []);\r\n  let newpdfblob = \"data:application/pdf;base64,\" + pdfblob\r\n  if (!pdfblob) return null\r\n\r\n  function onDocumentLoadSuccess(totalPage: any) {\r\n    setTotalPages(totalPage);\r\n  }\r\n\r\n  function directlyRenderPdf(totalPage: number) {\r\n    const x = [];\r\n    for (let i = 2; i <= totalPage; i++) {\r\n      x.push(\r\n        <Box key={i} justifyContent={'center'} display='flex' sx={{ objectFit: 'contain' }}>\r\n          <PDF workerSrc='pdf.worker.js' page={i} key={`x${i}`} scale={0.8} file={newpdfblob} />\r\n        </Box>)\r\n      x.push(<Box justifyContent={'center'} key={`c${i}`} display='flex'>{i}</Box>)\r\n    }\r\n    return x;\r\n  }\r\n\r\n  if (!pdfblob) return null\r\n  return (\r\n    <Loading loading={loading}>\r\n      <Container>\r\n        <Stack spacing={1} alignContent='center' pt={3} pb={3}>\r\n          <Box justifyContent={'center'} display='flex'>{`过期时间:${toLocalTimeString(fileData.expire)}`}</Box>\r\n          <Box justifyContent={'center'} display='flex'>{`剩余使用次数:${fileData.useLimit - fileData.use}`}</Box>\r\n          <Box justifyContent={'center'} display='flex' sx={{ objectFit: 'contain' }}>\r\n            <PDF scale={0.6}\r\n              workerSrc='pdf.worker.js'\r\n              file={newpdfblob}\r\n              onDocumentComplete={onDocumentLoadSuccess}\r\n              page={1} />\r\n          </Box>\r\n          <Box justifyContent={'center'} display='flex'>1</Box>\r\n          {\r\n            totalPage > 1 && directlyRenderPdf(totalPage)\r\n          }\r\n        </Stack>\r\n      </Container>\r\n    </Loading>\r\n  );\r\n}\r\n\r\nexport default PdfPreviewWrapper\r\n","// ** MUI Imports\r\n\r\n// ** Demo Components Imports\r\nimport PdfPreviewWrapper from 'src/components/pdf-preview'\r\nimport { Provider } from 'reto'\r\nimport { ConfirmDeleteDialogStore } from 'src/states/common/ConfirmDeleteDialogStore'\r\nimport { LoadingStore } from 'src/states/common/LoadingStore'\r\nimport { FileSharePageStore } from 'src/states/page/file-share'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { FileItemData } from 'src/types/ComponentProps'\r\nconst PdfPreviewPage = () => {\r\n  const location = useLocation();\r\n  const file = (location.state as FileItemData);\r\n  document.querySelector('meta[name=\"viewport\"]').setAttribute('content', 'width=device-width, initial-scale=1.0');\r\n  return (\r\n    <Provider of={LoadingStore} memo>\r\n      <Provider of={ConfirmDeleteDialogStore} memo>\r\n        <Provider of={FileSharePageStore} memo>\r\n          <PdfPreviewWrapper file={file} />\r\n        </Provider>\r\n      </Provider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default PdfPreviewPage\r\n","import axios from \"axios\";\r\nimport { ServiceResponse } from \"./common\";\r\nimport { FileItemData } from \"src/types/ComponentProps\";\r\nimport { number } from 'prop-types';\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface ShareParam\r\n */\r\nexport interface ShareParam {\r\n    fileName: string;\r\n    // 共享策略名称\r\n    name:string;\r\n    // 共享策略描述\r\n    desc:string;\r\n    target: string;\r\n    expire: number;\r\n    useLimit: number;\r\n    isAllow:number;\r\n    state:string;\r\n}\r\n\r\n\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface SharedFile\r\n */\r\nexport interface SharedFile {\r\n    id : number;\r\n    /**\r\n     * \r\n     * @type {string}\r\n     * @memberof SharedFile\r\n     */\r\n    fileName: string;\r\n    /**\r\n     * \r\n     * @type {number}\r\n     * @memberof SharedFile\r\n     */\r\n    fileSize: number;\r\n    /**\r\n     * \r\n     * @type {string}\r\n     * @memberof SharedFile\r\n     */\r\n    target: string;\r\n    /**\r\n     * \r\n     * @type {number}\r\n     * @memberof SharedFile\r\n     */\r\n    expire: number;\r\n    /**\r\n     * \r\n     * @type {number}\r\n     * @memberof SharedFile\r\n     */\r\n    useLimit: number;\r\n    /**\r\n     * \r\n     * @type {number}\r\n     * @memberof SharedFile\r\n     */\r\n    use: number;\r\n        /*\r\n    * 确认是否可以被共享\r\n    */\r\n    isAllow:number;\r\n    state:string;\r\n}\r\nexport interface BeSharedFile {\r\n    id :number;\r\n    fileName: string;\r\n    fileSize: number;\r\n    from: string;\r\n    expire: number;\r\n    useLimit: number;\r\n    use: number;\r\n    isAllow:number;\r\n    state:string;\r\n}\r\nexport interface LoginResult {\r\n    token: string\r\n    isAdmin : number\r\n}\r\nexport interface Login {\r\n    username: string\r\n    password: string\r\n}\r\n\r\nexport interface Regitser{\r\n    username: string,\r\n    password: string,\r\n    retry_password: string\r\n}\r\n\r\nexport interface CommonFile {\r\n    fileName: string,\r\n    owner: string,\r\n    expire: number,\r\n    use: number,\r\n    useLimit: number,\r\n    fileSize: number,\r\n        /*\r\n    * 确认是否可以被共享\r\n    */\r\n    isAllow:number;\r\n}\r\n\r\nexport function FileToFileItemData(idx: number, item: CommonFile): FileItemData {\r\n    const owner = localStorage.getItem('username')\r\n    return {\r\n        id: idx,\r\n        fileName: item.fileName,\r\n        size: item.fileSize,\r\n        state: owner == item.owner ? 'owned' : 'fromShared',\r\n        owner: item.owner,\r\n        isAllow: item.isAllow,\r\n        use: item.use,\r\n        useLimit: item.useLimit,\r\n        expire: item.expire\r\n    }\r\n}\r\nexport function SharedFileToFileItemData(idx: number, item: SharedFile): FileItemData {\r\n    const owner = localStorage.getItem('username')\r\n    return {\r\n        id: idx,\r\n        fileName: item.fileName,\r\n        size: item.fileSize,\r\n        state: owner == item.target ? 'owned' : 'fromShared',\r\n        owner: item.target,\r\n        isAllow: item.isAllow,\r\n        use: item.use,\r\n        useLimit: item.useLimit,\r\n        expire: item.expire\r\n    }\r\n}\r\n/**\r\n *\r\n * @export\r\n * @interface LoginResultResponse\r\n */\r\nexport const login = async (userName: string, passWord: string): Promise<ServiceResponse<LoginResult>> => {\r\n    const res = await axios.post('/user/login', {\"username\" : userName, \"password\":passWord })\r\n    return res.data\r\n}\r\n\r\nexport const register = async (userName: string, passWord: string, repeatPass: string) =>{\r\n    const res = await axios.post('/user/register', {\"username\" : userName, \"password\":passWord ,\"retry_password\":repeatPass})\r\n    return res.data\r\n}\r\n/**\r\n *\r\n * @export\r\n * @interface LoginResultResponse\r\n */\r\nexport const getFileList = async (): Promise<ServiceResponse<Array<CommonFile>>> => {\r\n    const res = await axios.get('/file/list', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\r\n    return res.data\r\n}\r\nexport const getUserList = async (): Promise<ServiceResponse<Array<string>>> => {\r\n    const res = await axios.get('/user/list', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\r\n    return res.data\r\n}\r\n\r\n/**\r\n *\r\n * @export\r\n * @interface LoginResultResponse\r\n */\r\n// \r\nexport const shareFile = async (param: ShareParam): Promise<ServiceResponse<undefined>> => {\r\n    console.log(\"请求参数\",param)\r\n    const res = await axios.post('/user/share', param, { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\r\n    return res.data\r\n}\r\n// 获取分享出去的文件列表\r\nexport const myShareFile = async (): Promise<ServiceResponse<Array<SharedFile>>> => {\r\n    const res = await axios.get('/file/share', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\r\n    return res.data\r\n}\r\n// 获取当前用户被共享病历\r\nexport const myBeShareFile = async (): Promise<ServiceResponse<Array<BeSharedFile>>> => {\r\n    const res = await axios.get('/file/be-share', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\r\n    return res.data\r\n}\r\n\r\n// 根据文件名称下载文件\r\nexport const downloadFile = async (fileName: string,state:string): Promise<any> => {\r\n    const res = await axios.get(`/file/download?filename=${fileName}&state=${state}`, { responseType: 'blob', headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\r\n    return res.data\r\n}\r\nexport const uploadFile = async(param:FormData): Promise<any>=>{\r\n    const res = await axios.post(`/admin/upload`,param,{headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }})\r\n    return res.data\r\n}\r\nexport const deleteSharingFile = async (id:number) => {\r\n    const res = await axios.get(`/file/shareDelete?id=${id}`,{headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` }})\r\n    return res.data\r\n}\r\n","import { Dispatch, SetStateAction, useState } from 'react'\r\nimport { useStore } from 'reto'\r\nimport { Tunnel } from 'src/service/models'\r\nimport { ConfirmDeleteDialogStore } from 'src/states/common/ConfirmDeleteDialogStore'\r\nimport { LoadingStore } from 'src/states/common/LoadingStore'\r\n\r\n\r\n// 新建数据通\r\n\r\nexport interface FileSharePageStates {\r\n  rows: Tunnel[]\r\n  editorDialogOpen: boolean\r\n  updateDialogOpen: boolean\r\n}\r\n\r\nexport interface FileSharePageStore\r\n  extends FileSharePageStates,\r\n  LoadingStore,\r\n  ConfirmDeleteDialogStore {\r\n  setRows: Dispatch<SetStateAction<Tunnel[]>>\r\n  setEditorDialogOpen: Dispatch<SetStateAction<boolean>>\r\n  setUpdateDialogOpen: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\nexport function FileSharePageStore(): FileSharePageStore {\r\n  const loadingStore = useStore(LoadingStore)\r\n  const confirmDeleteDialogStore = useStore(ConfirmDeleteDialogStore)\r\n  const [rows, setRows] = useState<Tunnel[]>([])\r\n  const [editorDialogOpen, setEditorDialogOpen] = useState(false)\r\n  const [updateDialogOpen, setUpdateDialogOpen] = useState(false)\r\n  return {\r\n    ...loadingStore,\r\n    ...confirmDeleteDialogStore,\r\n    rows,\r\n    setRows,\r\n    editorDialogOpen,\r\n    setEditorDialogOpen,\r\n    updateDialogOpen,\r\n    setUpdateDialogOpen\r\n  }\r\n}\r\n","//transfrom unix time stamp to date string\r\nexport function toLocalTimeString(unixTime: number): string {\r\n    const date = new Date(unixTime);\r\n    return date.toLocaleString();\r\n}\r\n"],"names":["loading","children","CircularProgress","sx","position","left","top","transform","props","useState","pdfblob","setPdfBlob","setLoading","totalPage","setTotalPages","fileData","file","useEffect","state","console","log","downloadFile","fileName","then","res","blob","Blob","type","reader","FileReader","readAsDataURL","addEventListener","base64","result","split","newpdfblob","Container","Stack","spacing","alignContent","pt","pb","Box","justifyContent","display","toLocalTimeString","expire","useLimit","use","objectFit","scale","workerSrc","onDocumentComplete","page","x","i","push","directlyRenderPdf","useLocation","document","querySelector","setAttribute","of","LoadingStore","memo","ConfirmDeleteDialogStore","FileSharePageStore","SharedFileToFileItemData","idx","item","owner","localStorage","getItem","id","size","fileSize","target","isAllow","login","userName","passWord","axios","data","register","repeatPass","getFileList","headers","getUserList","shareFile","param","myShareFile","myBeShareFile","responseType","uploadFile","deleteSharingFile","loadingStore","useStore","confirmDeleteDialogStore","rows","setRows","editorDialogOpen","setEditorDialogOpen","updateDialogOpen","setUpdateDialogOpen","unixTime","Date","toLocaleString"],"sourceRoot":""}