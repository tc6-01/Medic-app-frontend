{"version":3,"file":"static/js/819.f097ca54.chunk.js","mappings":"qKAoBA,IAfkB,SAAH,GAAmE,IAA7DA,EAAS,EAATA,UAAWC,EAAI,EAAJA,KAAMC,EAAW,EAAXA,YAAaC,EAAO,EAAPA,QACzCC,GAAQC,EAAAA,EAAAA,KACd,OACI,UAAC,IAAU,CAACC,GAAI,CAAEC,MAAO,OAAQC,QAAS,OAAQC,eAAgB,cAAgBN,QAASA,EAAQ,WAC/F,SAAC,IAAc,WACX,SAAC,IAAM,CAACG,GAAI,CAAEI,gBAAiBN,EAAMO,OAAOC,QAAQC,OAAQ,SACvDZ,OAGT,SAAC,IAAY,CAACK,GAAI,CAAEQ,UAAW,QAASC,SAAU,GAAIC,WAAY,QAAUJ,QAASZ,EAAWiB,UAAWf,MAGvH,C,uDCFA,IAXgB,SAAH,GAA2C,IAArCgB,EAAK,EAALA,MAAOC,EAAQ,EAARA,SACtB,OACI,UAAC,IAAK,CAACC,GAAI,EAAE,WAET,SAAC,IAAU,CAACC,QAAQ,KAAKC,MAAM,cAAcb,eAAgB,OAAO,SAAES,IACrEC,IAGb,C,oICVA,GAAeI,E,QAAAA,GAA4BC,EAAAA,cAAoB,OAAQ,CACrEC,EAAG,mdACD,iB,uCCEEC,EAAc,CAChB,CACIC,GAAI,EACJC,KAAM,UACN1B,YAAa,kCAEjB,CACIyB,GAAI,EACJC,KAAM,UACN1B,YAAa,kCAEjB,CACIyB,GAAI,EACJC,KAAM,UACN1B,YAAa,mCAIf2B,EAAc,CAChB,CACIF,GAAI,EACJC,KAAM,UACN1B,YAAa,kCAEjB,CACIyB,GAAI,EACJC,KAAM,UACN1B,YAAa,kCAEjB,CACIyB,GAAI,EACJC,KAAM,UACN1B,YAAa,mCAoBrB,EAhB+B,WAE3B,OAAO,UAAC4B,EAAA,EAAK,YACT,SAACC,EAAA,EAAO,CAACb,MAAO,uCAAS,SACpBQ,EAAYM,KAAI,SAACC,EAAMC,GACpB,OAAO,SAACC,EAAA,EAAS,CAACnC,UAAWiC,EAAKL,KAAM1B,YAAa+B,EAAK/B,YAAaD,MAAM,SAACmC,EAAa,CAACrB,SAAS,WACzG,OAEJ,SAACgB,EAAA,EAAO,CAACb,MAAO,uCAAS,SACpBW,EAAYG,KAAI,SAACC,EAAMC,GACpB,OAAO,SAACC,EAAA,EAAS,CAACnC,UAAWiC,EAAKL,KAAM1B,YAAa+B,EAAK/B,YAAaD,MAAM,SAACmC,EAAa,CAACrB,SAAS,WACzG,QAGZ,ECjCA,EAdyB,WACvB,OACE,SAAC,KAAQ,CAACsB,GAAIC,EAAAA,EAAcC,MAAI,YAC9B,SAAC,KAAQ,CAACF,GAAIG,EAAAA,EAA0BD,MAAI,YAC1C,SAAC,KAAQ,CAACF,GAAII,EAAAA,EAAuBF,MAAI,YACvC,SAAC,KAAQ,CAACF,GAAIK,EAAAA,EAAuBH,MAAI,YACvC,SAAC,EAAsB,WAMnC,C,sHCFO,SAASE,IACd,IAAME,GAAeC,EAAAA,EAAAA,IAASN,EAAAA,GACxBO,GAAcD,EAAAA,EAAAA,IAASE,EAAAA,GAC7B,GAAwBC,EAAAA,EAAAA,UAAmB,IAAG,eAAvCC,EAAI,KAAEC,EAAO,KACpB,OAAO,0BACFN,GACAE,GAAW,IACdG,KAAAA,EACAC,QAAAA,GAEJ,C","sources":["components/common/GroupItem/index.tsx","components/common/Section/index.tsx","../node_modules/@material-ui/icons/esm/GroupOutlined.js","components/group-manage/index.tsx","pages/group-manage/index.tsx","states/page/policy-manage/index.ts"],"sourcesContent":["import { Avatar, IconButton, ListItemAvatar, ListItemText, useTheme } from '@mui/material';\r\nimport { GroupItemProps } from \"src/types/ComponentProps\";\r\n\r\n\r\n\r\nconst GroupItem = ({ groupName, icon, description, onClick }: GroupItemProps) => {\r\n    const theme = useTheme()\r\n    return (\r\n        <IconButton sx={{ width: '100%', display: 'flex', justifyContent: 'flex-start' }} onClick={onClick}>\r\n            <ListItemAvatar>\r\n                <Avatar sx={{ backgroundColor: theme.colors.primary.light }}>\r\n                    {icon}\r\n                </Avatar>\r\n            </ListItemAvatar>\r\n            <ListItemText sx={{ textAlign: 'start', fontSize: 20, fontWeight: 'bold' }} primary={groupName} secondary={description} />\r\n        </IconButton>\r\n    )\r\n}\r\n\r\n\r\nexport default GroupItem\r\n","import { Stack, Typography } from '@mui/material';\r\nimport { SectionProps } from \"src/types/ComponentProps\";\r\n\r\n\r\nconst Section = ({ title, children }: SectionProps) => {\r\n    return (\r\n        <Stack mt={1}>\r\n            {/* <Divider sx={{ mb: 1 }} /> */}\r\n            <Typography variant=\"h4\" color=\"textPrimary\" justifyContent={'left'}>{title}</Typography>\r\n            {children}\r\n        </Stack>\r\n    )\r\n}\r\n\r\n\r\nexport default Section\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M9 13.75c-2.34 0-7 1.17-7 3.5V19h14v-1.75c0-2.33-4.66-3.5-7-3.5zM4.34 17c.84-.58 2.87-1.25 4.66-1.25s3.82.67 4.66 1.25H4.34zM9 12c1.93 0 3.5-1.57 3.5-3.5S10.93 5 9 5 5.5 6.57 5.5 8.5 7.07 12 9 12zm0-5c.83 0 1.5.67 1.5 1.5S9.83 10 9 10s-1.5-.67-1.5-1.5S8.17 7 9 7zm7.04 6.81c1.16.84 1.96 1.96 1.96 3.44V19h4v-1.75c0-2.02-3.5-3.17-5.96-3.44zM15 12c1.93 0 3.5-1.57 3.5-3.5S16.93 5 15 5c-.54 0-1.04.13-1.5.35.63.89 1 1.98 1 3.15s-.37 2.26-1 3.15c.46.22.96.35 1.5.35z\"\n}), 'GroupOutlined');","import { GroupOutlined } from '@material-ui/icons';\r\nimport { Stack } from '@mui/material';\r\nimport Section from 'src/components/common/Section';\r\nimport GroupItem from '../common/GroupItem/index';\r\n\r\n\r\nconst AddedGroups = [\r\n    {\r\n        id: 1,\r\n        name: '组1',\r\n        description: '这是一个组',\r\n    },\r\n    {\r\n        id: 2,\r\n        name: '组2',\r\n        description: '这是一个组',\r\n    },\r\n    {\r\n        id: 3,\r\n        name: '组3',\r\n        description: '这是一个组',\r\n    },\r\n]\r\n\r\nconst ownedGroups = [\r\n    {\r\n        id: 1,\r\n        name: '组1',\r\n        description: '这是一个组',\r\n    },\r\n    {\r\n        id: 2,\r\n        name: '组2',\r\n        description: '这是一个组',\r\n    },\r\n    {\r\n        id: 3,\r\n        name: '组3',\r\n        description: '这是一个组',\r\n    },\r\n]\r\n\r\nconst GroupManagePageWrapper = () => {\r\n\r\n    return <Stack>\r\n        <Section title={'我加入的群组'}>\r\n            {AddedGroups.map((item, index) => {\r\n                return <GroupItem groupName={item.name} description={item.description} icon={<GroupOutlined fontSize='large' />} />\r\n            })}\r\n        </Section>\r\n        <Section title={'我创建的群组'}>\r\n            {ownedGroups.map((item, index) => {\r\n                return <GroupItem groupName={item.name} description={item.description} icon={<GroupOutlined fontSize='large' />} />\r\n            })}\r\n        </Section>\r\n    </Stack>\r\n}\r\n\r\nexport default GroupManagePageWrapper\r\n","// ** MUI Imports\r\n\r\n// ** Demo Components Imports\r\nimport { Provider } from 'reto'\r\nimport { ConfirmDeleteDialogStore } from 'src/states/common/ConfirmDeleteDialogStore'\r\nimport { LoadingStore } from 'src/states/common/LoadingStore'\r\nimport { PolicyManagePageStore } from 'src/states/page/policy-manage'\r\nimport { CreatePolicyPageStore } from 'src/states/page/policy-manage/CreatePolicyPageStore'\r\nimport GroupManagePageWrapper from '../../components/group-manage/index'\r\nconst PolicyEditorPage = () => {\r\n  return (\r\n    <Provider of={LoadingStore} memo>\r\n      <Provider of={ConfirmDeleteDialogStore} memo>\r\n        <Provider of={PolicyManagePageStore} memo>\r\n          <Provider of={CreatePolicyPageStore} memo>\r\n            <GroupManagePageWrapper />\r\n          </Provider>\r\n        </Provider>\r\n      </Provider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default PolicyEditorPage\r\n","import { BottomDrawerStates } from '../../global/BottomDrawerStore';\r\nimport { Dispatch, SetStateAction, useState } from 'react'\r\nimport { useStore } from 'reto'\r\nimport { Policy } from 'src/service/models'\r\nimport { ConfirmDeleteDialogStore } from '../../common/ConfirmDeleteDialogStore'\r\nimport { LoadingStore } from 'src/states/common/LoadingStore'\r\nimport { BottomDrawerStore } from '../../global/BottomDrawerStore';\r\n\r\nexport interface PolicyManagePageStates {\r\n  rows: Policy[]\r\n}\r\n\r\nexport interface PolicyManagePageStore\r\n  extends PolicyManagePageStates,\r\n  LoadingStore,\r\n  BottomDrawerStore {\r\n  setRows: Dispatch<SetStateAction<Policy[]>>\r\n}\r\n\r\nexport function PolicyManagePageStore(): PolicyManagePageStore {\r\n  const loadingStore = useStore(LoadingStore)\r\n  const drawerStore = useStore(BottomDrawerStore)\r\n  const [rows, setRows] = useState<Policy[]>([])\r\n  return {\r\n    ...loadingStore,\r\n    ...drawerStore,\r\n    rows,\r\n    setRows,\r\n  }\r\n}\r\n"],"names":["groupName","icon","description","onClick","theme","useTheme","sx","width","display","justifyContent","backgroundColor","colors","primary","light","textAlign","fontSize","fontWeight","secondary","title","children","mt","variant","color","createSvgIcon","React","d","AddedGroups","id","name","ownedGroups","Stack","Section","map","item","index","GroupItem","GroupOutlined","of","LoadingStore","memo","ConfirmDeleteDialogStore","PolicyManagePageStore","CreatePolicyPageStore","loadingStore","useStore","drawerStore","BottomDrawerStore","useState","rows","setRows"],"sourceRoot":""}