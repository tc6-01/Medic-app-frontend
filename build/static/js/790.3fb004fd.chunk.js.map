{"version":3,"file":"static/js/790.3fb004fd.chunk.js","mappings":"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","sources":["service/userApi.ts","states/page/user/register/index.tsx","components/common/RegisterWindow/index.tsx","pages/user/register/index.tsx","../node_modules/@mui/material/FormControlLabel/formControlLabelClasses.js","../node_modules/@mui/material/FormControlLabel/FormControlLabel.js"],"sourcesContent":["import { LoginResultResponse, Response } from './models';\r\nimport axios from \"axios\";\r\nimport { ServiceResponse } from './types';\r\n\r\nconst login = async (userName: string, passWord: string): Promise<ServiceResponse<LoginResultResponse>> => {\r\n    const res = await axios.post('/login', { userName, passWord })\r\n    return res.data\r\n}\r\n\r\nconst register = async (userName: string, passWord: string): Promise<Response> => {\r\n    const res = await axios.post('/api/user/register', {}, { params: { userName, passWord } })\r\n    return res.data\r\n}\r\n\r\nexport { login, register };\r\n","import { Dispatch, SetStateAction, useState } from \"react\"\r\n\r\n// 新建数据通道\r\nexport interface RegisterWindowStates {\r\n    passWord: string\r\n    userName: string\r\n    repetePassword: string\r\n    showPassword: boolean\r\n}\r\n\r\nexport interface RegisterWindowStore extends RegisterWindowStates {\r\n    setPassWord: Dispatch<SetStateAction<string>>;\r\n    setUserName: Dispatch<SetStateAction<string>>;\r\n    setShowPassword: Dispatch<SetStateAction<boolean>>;\r\n    setRepetePassword: Dispatch<SetStateAction<string>>;\r\n}\r\n\r\nexport function RegisterWindowStore(): RegisterWindowStore {\r\n    const [passWord, setPassWord] = useState<string>('')\r\n    const [repetePassword, setRepetePassword] = useState<string>('')\r\n    const [userName, setUserName] = useState<string>('')\r\n    const [showPassword, setShowPassword] = useState<boolean>(false)\r\n    return {\r\n        passWord,\r\n        userName,\r\n        showPassword,\r\n        setPassWord,\r\n        repetePassword,\r\n        setRepetePassword,\r\n        setUserName,\r\n        setShowPassword\r\n    }\r\n}\r\n","// ** React Imports\r\n// ** MUI Components\r\n\r\nimport FooterIllustrationsV1 from 'src/components/user/login/FooterIllustration'\r\nimport { login } from 'src/service/userApi'\r\nimport { SnackBarStore } from 'src/states/global/TopSnackBarStore'\r\nimport Box from '@mui/material/Box'\r\nimport Button from '@mui/material/Button'\r\nimport MuiCard, { CardProps } from '@mui/material/Card'\r\nimport CardContent from '@mui/material/CardContent'\r\nimport Checkbox from '@mui/material/Checkbox'\r\nimport FormControl from '@mui/material/FormControl'\r\nimport MuiFormControlLabel, { FormControlLabelProps } from '@mui/material/FormControlLabel'\r\nimport IconButton from '@mui/material/IconButton'\r\nimport InputAdornment from '@mui/material/InputAdornment'\r\nimport InputLabel from '@mui/material/InputLabel'\r\nimport OutlinedInput from '@mui/material/OutlinedInput'\r\nimport { styled } from '@mui/material/styles'\r\nimport TextField from '@mui/material/TextField'\r\nimport Typography from '@mui/material/Typography'\r\nimport EyeOffOutline from 'mdi-material-ui/EyeOffOutline'\r\nimport EyeOutline from 'mdi-material-ui/EyeOutline'\r\nimport { ChangeEvent, MouseEvent } from 'react'\r\nimport { useNavigate } from 'react-router'\r\nimport { useStore } from 'reto'\r\nimport { LoginPageStore } from 'src/states/page/user/login'\r\nimport { Stack, Container } from '@mui/material';\r\nimport PasswordInput from '../PasswordInput/index';\r\nimport { RegisterWindowStore } from '../../../states/page/user/register/index';\r\n\r\n\r\n\r\n// ** Styled Components\r\nconst Card = styled(MuiCard)<CardProps>(({ theme }) => ({\r\n    [theme.breakpoints.up('sm')]: { width: '28rem' }\r\n}))\r\n\r\nconst LinkStyled = styled('a')(({ theme }) => ({\r\n    fontSize: '0.875rem',\r\n    textDecoration: 'none',\r\n    color: theme.palette.primary.main\r\n}))\r\n\r\nconst FormControlLabel = styled(MuiFormControlLabel)<FormControlLabelProps>(({ theme }) => ({\r\n    '& .MuiFormControlLabel-label': {\r\n        fontSize: '0.875rem',\r\n        color: theme.palette.text.secondary\r\n    }\r\n}))\r\n\r\nconst RegisterWindow = () => {\r\n    const states = useStore(RegisterWindowStore)\r\n    const topSnackBarStates = useStore(SnackBarStore)\r\n    const navigator = useNavigate()\r\n\r\n    const handleClickRegister = () => {\r\n        login(states.userName, states.passWord).then((res) => {\r\n            if (res && res.status == 0) {\r\n                topSnackBarStates.setSnackBarMessage('注册成功，请重新登录')\r\n                topSnackBarStates.setSnackBarOpen(true)\r\n                topSnackBarStates.setSnackBarType('success')\r\n                navigator('/user/login', { replace: true })\r\n            } else {\r\n                topSnackBarStates.setSnackBarMessage(`注册成功,${res.message}`)\r\n                topSnackBarStates.setSnackBarOpen(true)\r\n                topSnackBarStates.setSnackBarType('error')\r\n            }\r\n        }).catch((err) => {\r\n            topSnackBarStates.setSnackBarMessage(`注册成功,${err}`)\r\n            topSnackBarStates.setSnackBarOpen(true)\r\n            topSnackBarStates.setSnackBarType('error')\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Stack className='content-center'>\r\n            <Box sx={{ mb: 4, display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\r\n                <Typography\r\n                    variant='h6'\r\n                    sx={{\r\n                        lineHeight: 1,\r\n                        fontWeight: 600,\r\n                        textTransform: 'uppercase',\r\n                        fontSize: '1.5rem !important'\r\n                    }}\r\n                >\r\n                    用户注册\r\n                </Typography>\r\n            </Box>\r\n            <Container maxWidth=\"sm\">\r\n                <Stack spacing={2}>\r\n                    <TextField autoFocus\r\n                        onChange={(event) => states.setUserName(event.target.value)}\r\n                        fullWidth\r\n                        id='email' label='输入账号'\r\n                    >\r\n                        {states.userName}\r\n                    </TextField>\r\n                    <PasswordInput\r\n                        password={states.passWord}\r\n                        title={'输入密码'}\r\n                        showPassword={states.showPassword}\r\n                        onChange={(password) => states.setPassWord(password)}\r\n                        onShowPasswordChange={() => states.setShowPassword((showPassword) => !showPassword)}\r\n                    />\r\n                    <PasswordInput\r\n                        password={states.repetePassword}\r\n                        title={'再次输入密码'}\r\n                        showPassword={states.showPassword}\r\n                        onChange={(password) => states.setRepetePassword(password)}\r\n                        onShowPasswordChange={() => states.setShowPassword((showPassword) => !showPassword)}\r\n                    />\r\n                    <Button\r\n                        fullWidth\r\n                        size='large'\r\n                        variant='contained'\r\n                        sx={{ marginBottom: 7 }}\r\n                        onClick={handleClickRegister}\r\n                    >\r\n                        确认注册\r\n                    </Button>\r\n                </Stack>\r\n            </Container>\r\n        </Stack>\r\n    )\r\n}\r\n\r\nexport default RegisterWindow\r\n","// ** MUI Imports\r\n\r\n// ** Demo Components Imports\r\nimport { Provider } from 'reto';\r\nimport RegisterWindow from 'src/components/common/RegisterWindow';\r\nimport { RegisterWindowStore } from '../../../states/page/user/register/index';\r\n\r\nconst RegisterPage = () => {\r\n  return (\r\n    <Provider of={RegisterWindowStore} memo>\r\n      <RegisterWindow />\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default RegisterPage\r\n","import { generateUtilityClasses, generateUtilityClass } from '@mui/base';\nexport function getFormControlLabelUtilityClasses(slot) {\n  return generateUtilityClass('MuiFormControlLabel', slot);\n}\nconst formControlLabelClasses = generateUtilityClasses('MuiFormControlLabel', ['root', 'labelPlacementStart', 'labelPlacementTop', 'labelPlacementBottom', 'disabled', 'label', 'error']);\nexport default formControlLabelClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"checked\", \"className\", \"componentsProps\", \"control\", \"disabled\", \"disableTypography\", \"inputRef\", \"label\", \"labelPlacement\", \"name\", \"onChange\", \"value\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { refType } from '@mui/utils';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { useFormControl } from '../FormControl';\nimport Typography from '../Typography';\nimport capitalize from '../utils/capitalize';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport formControlLabelClasses, { getFormControlLabelUtilityClasses } from './formControlLabelClasses';\nimport formControlState from '../FormControl/formControlState';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    labelPlacement,\n    error\n  } = ownerState;\n  const slots = {\n    root: ['root', disabled && 'disabled', `labelPlacement${capitalize(labelPlacement)}`, error && 'error'],\n    label: ['label', disabled && 'disabled']\n  };\n  return composeClasses(slots, getFormControlLabelUtilityClasses, classes);\n};\n\nexport const FormControlLabelRoot = styled('label', {\n  name: 'MuiFormControlLabel',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [{\n      [`& .${formControlLabelClasses.label}`]: styles.label\n    }, styles.root, styles[`labelPlacement${capitalize(ownerState.labelPlacement)}`]];\n  }\n})(({\n  theme,\n  ownerState\n}) => _extends({\n  display: 'inline-flex',\n  alignItems: 'center',\n  cursor: 'pointer',\n  // For correct alignment with the text.\n  verticalAlign: 'middle',\n  WebkitTapHighlightColor: 'transparent',\n  marginLeft: -11,\n  marginRight: 16,\n  // used for row presentation of radio/checkbox\n  [`&.${formControlLabelClasses.disabled}`]: {\n    cursor: 'default'\n  }\n}, ownerState.labelPlacement === 'start' && {\n  flexDirection: 'row-reverse',\n  marginLeft: 16,\n  // used for row presentation of radio/checkbox\n  marginRight: -11\n}, ownerState.labelPlacement === 'top' && {\n  flexDirection: 'column-reverse',\n  marginLeft: 16\n}, ownerState.labelPlacement === 'bottom' && {\n  flexDirection: 'column',\n  marginLeft: 16\n}, {\n  [`& .${formControlLabelClasses.label}`]: {\n    [`&.${formControlLabelClasses.disabled}`]: {\n      color: (theme.vars || theme).palette.text.disabled\n    }\n  }\n}));\n/**\n * Drop-in replacement of the `Radio`, `Switch` and `Checkbox` component.\n * Use this component if you want to display an extra label.\n */\n\nconst FormControlLabel = /*#__PURE__*/React.forwardRef(function FormControlLabel(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiFormControlLabel'\n  });\n\n  const {\n    className,\n    componentsProps = {},\n    control,\n    disabled: disabledProp,\n    disableTypography,\n    label: labelProp,\n    labelPlacement = 'end'\n  } = props,\n        other = _objectWithoutPropertiesLoose(props, _excluded);\n\n  const muiFormControl = useFormControl();\n  let disabled = disabledProp;\n\n  if (typeof disabled === 'undefined' && typeof control.props.disabled !== 'undefined') {\n    disabled = control.props.disabled;\n  }\n\n  if (typeof disabled === 'undefined' && muiFormControl) {\n    disabled = muiFormControl.disabled;\n  }\n\n  const controlProps = {\n    disabled\n  };\n  ['checked', 'name', 'onChange', 'value', 'inputRef'].forEach(key => {\n    if (typeof control.props[key] === 'undefined' && typeof props[key] !== 'undefined') {\n      controlProps[key] = props[key];\n    }\n  });\n  const fcs = formControlState({\n    props,\n    muiFormControl,\n    states: ['error']\n  });\n\n  const ownerState = _extends({}, props, {\n    disabled,\n    labelPlacement,\n    error: fcs.error\n  });\n\n  const classes = useUtilityClasses(ownerState);\n  let label = labelProp;\n\n  if (label != null && label.type !== Typography && !disableTypography) {\n    label = /*#__PURE__*/_jsx(Typography, _extends({\n      component: \"span\",\n      className: classes.label\n    }, componentsProps.typography, {\n      children: label\n    }));\n  }\n\n  return /*#__PURE__*/_jsxs(FormControlLabelRoot, _extends({\n    className: clsx(classes.root, className),\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: [/*#__PURE__*/React.cloneElement(control, controlProps), label]\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControlLabel.propTypes\n/* remove-proptypes */\n= {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, the component appears selected.\n   */\n  checked: PropTypes.bool,\n\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The props used for each slot inside.\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    typography: PropTypes.object\n  }),\n\n  /**\n   * A control element. For instance, it can be a `Radio`, a `Switch` or a `Checkbox`.\n   */\n  control: PropTypes.element.isRequired,\n\n  /**\n   * If `true`, the control is disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label is rendered as it is passed without an additional typography node.\n   */\n  disableTypography: PropTypes.bool,\n\n  /**\n   * Pass a ref to the `input` element.\n   */\n  inputRef: refType,\n\n  /**\n   * A text or an element to be used in an enclosing label element.\n   */\n  label: PropTypes.node,\n\n  /**\n   * The position of the label.\n   * @default 'end'\n   */\n  labelPlacement: PropTypes.oneOf(['bottom', 'end', 'start', 'top']),\n\n  /**\n   * @ignore\n   */\n  name: PropTypes.string,\n\n  /**\n   * Callback fired when the state is changed.\n   *\n   * @param {React.SyntheticEvent} event The event source of the callback.\n   * You can pull out the new checked state by accessing `event.target.checked` (boolean).\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n\n  /**\n   * The value of the component.\n   */\n  value: PropTypes.any\n} : void 0;\nexport default FormControlLabel;"],"names":["login","userName","passWord","axios","res","data","RegisterWindowStore","useState","setPassWord","repetePassword","setRepetePassword","setUserName","showPassword","setShowPassword","styled","MuiCard","theme","breakpoints","up","width","fontSize","textDecoration","color","palette","primary","main","MuiFormControlLabel","text","secondary","states","useStore","topSnackBarStates","SnackBarStore","navigator","useNavigate","Stack","className","Box","sx","mb","display","alignItems","justifyContent","Typography","variant","lineHeight","fontWeight","textTransform","Container","maxWidth","spacing","TextField","autoFocus","onChange","event","target","value","fullWidth","id","label","PasswordInput","password","title","onShowPasswordChange","Button","size","marginBottom","onClick","then","status","setSnackBarMessage","setSnackBarOpen","setSnackBarType","replace","message","catch","err","of","memo","getFormControlLabelUtilityClasses","slot","generateUtilityClass","generateUtilityClasses","_excluded","FormControlLabelRoot","name","overridesResolver","props","styles","ownerState","formControlLabelClasses","root","capitalize","labelPlacement","_extends","cursor","verticalAlign","WebkitTapHighlightColor","marginLeft","marginRight","flexDirection","vars","disabled","React","inProps","ref","useThemeProps","componentsProps","control","disabledProp","disableTypography","labelProp","other","_objectWithoutPropertiesLoose","muiFormControl","useFormControl","controlProps","forEach","key","fcs","formControlState","error","classes","slots","composeClasses","useUtilityClasses","type","_jsx","component","typography","children","_jsxs","clsx"],"sourceRoot":""}