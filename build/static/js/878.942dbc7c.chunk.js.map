{"version":3,"file":"static/js/878.942dbc7c.chunk.js","mappings":"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","sources":["states/page/file-share/sharedbyme/index.ts","components/file-share/shared-by-me/ShredByMeFileOperationMenu/index.tsx","components/file-share/shared-by-me/SharedByMe.tsx","pages/file-share/SharedByMe.tsx","../node_modules/@material-ui/icons/esm/Delete.js"],"sourcesContent":["import { ConfirmDeleteDialogStore } from 'src/states/common/ConfirmDeleteDialogStore'\r\nimport { LoadingStore } from 'src/states/common/LoadingStore'\r\nimport { Dispatch, SetStateAction, useState } from 'react'\r\nimport { useStore } from 'reto'\r\nimport { PolicySelectData } from 'src/types/models/DataModels'\r\nimport { Tunnel } from 'src/service/models'\r\nimport { SharedFile } from 'src/service/medic'\r\n\r\ntype SnackBarType = 'success' | 'error' | 'warning' | 'info'\r\n\r\n// 新建数据通道\r\nexport interface SharedByMeStates {\r\n  files: SharedFile[]\r\n}\r\n\r\nexport interface SharedByMeStore\r\n  extends SharedByMeStates,\r\n  LoadingStore {\r\n  setFiles: Dispatch<SetStateAction<any[]>>\r\n}\r\n\r\nexport function SharedByMeStore(): SharedByMeStore {\r\n  const loadingStore = useStore(LoadingStore)\r\n  const confirmDeleteDialogStore = useStore(ConfirmDeleteDialogStore)\r\n  const [files, setFiles] = useState<any[]>([])\r\n  return {\r\n    ...loadingStore,\r\n    ...confirmDeleteDialogStore,\r\n    files,\r\n    setFiles\r\n  }\r\n}\r\n","import Section from 'src/components/common/Section';\r\nimport SimpleFileItem from 'src/components/common/SimpleFileItem';\r\nimport VerticalList from 'src/components/common/VerticalList';\r\nimport { Box, Stack } from '@mui/material';\r\nimport { FileListProps, FileOperationMenuProps } from '../../../../types/ComponentProps';\r\nimport OperationItem from 'src/components/common/OperationItem';\r\nimport { FolderArrowUp } from 'mdi-material-ui';\r\nimport { Delete, ErrorOutline, Share } from '@material-ui/icons';\r\n\r\n\r\n\r\nconst ShredByMeFileOperationMenu = ({ fileName, onOperationClicked }: FileOperationMenuProps) => {\r\n    return (\r\n        <Stack m={1}>\r\n            <Box borderRadius={3}>\r\n                <SimpleFileItem fileName={fileName} />\r\n                <Section title='文件操作'>\r\n                    <VerticalList items={[\r\n                        <OperationItem icon={<FolderArrowUp fontSize='large' />} name={'打开'} onclick={() => onOperationClicked('open')} />,\r\n                        <OperationItem icon={<Share fontSize='large' />} name={'共享'} onclick={() => onOperationClicked('share')} />,\r\n                        <OperationItem icon={<Delete fontSize='large' />} name={'删除'} onclick={() => onOperationClicked('delete')} />\r\n                    ]} />\r\n                </Section>\r\n                <Section title='更多操作'>\r\n                    <VerticalList items={[\r\n                        <OperationItem icon={<ErrorOutline fontSize='large' />} name={'详细信息'} onclick={() => onOperationClicked('detail')} />\r\n                    ]} />\r\n                </Section>\r\n            </Box>\r\n\r\n        </Stack>\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default ShredByMeFileOperationMenu\r\n","import { useEffect } from \"react\"\r\nimport { useNavigate } from \"react-router\"\r\nimport FileItem from \"../../common/FileItem\"\r\nimport VerticalList from \"../../common/VerticalList\"\r\nimport { useStore } from 'reto';\r\nimport { SharedByMeStore } from \"src/states/page/file-share/sharedbyme\"\r\nimport FileState from \"src/components/common/FileState\"\r\nimport { BottomDrawerStore } from '../../../states/global/BottomDrawerStore';\r\nimport ShredByMeFileOperationMenu from \"./ShredByMeFileOperationMenu\"\r\nimport { Box, Fade } from \"@mui/material\"\r\nimport { SharedFileToFileItemData, deleteSharingFile, myShareFile } from \"src/service/medic\"\r\nimport { toLocalTimeString } from \"src/utils/time\"\r\nimport { sizeToString } from \"src/utils/sizeToString\"\r\nimport { SnackBarStore } from \"src/states/global/TopSnackBarStore\";\r\nimport Toast from \"src/components/common/Toast\";\r\n\r\nconst SharedByMeWrapper = () => {\r\n  const navi = useNavigate()\r\n  const states = useStore(SharedByMeStore)\r\n  const topSnackBarStates = useStore(SnackBarStore)\r\n  const bottomeDrawerStates = useStore(BottomDrawerStore)\r\n  useEffect(() => {\r\n    myShareFile().then(res => {\r\n      if (res && res.code === 200) {\r\n        if (Array.isArray(res.data)) {\r\n          states.setFiles(res.data.map((item, idx) => {\r\n            return {\r\n                id: item.id,\r\n                fileName: item.fileName,\r\n                fileSize: item.fileSize,\r\n                state: 'fromShared',\r\n                target: item.target,\r\n                use: item.use,\r\n                useLimit: item.useLimit,\r\n                expire: item.expire,\r\n                isAllow:item.isAllow\r\n            }}))\r\n          states.setLoading(false)\r\n        } else {\r\n          states.setFiles([res.data])\r\n        }    \r\n      }\r\n    })\r\n  }, [])\r\n\r\n  const handleFileOperation = (ty: any, index: number) => {\r\n    switch (ty) {\r\n      case 'delete':\r\n        bottomeDrawerStates.setBottomDrawerOpen(false)\r\n        deleteSharingFile(states.files[index].id).then((res) => {\r\n          if (res && res.code == 200) {\r\n              topSnackBarStates.setSnackBarMessage('病历共享记录删除成功')\r\n              topSnackBarStates.setSnackBarOpen(true)\r\n              topSnackBarStates.setSnackBarType('success')\r\n          } else {\r\n              topSnackBarStates.setSnackBarMessage(`删除失败,${res.message}`)\r\n              topSnackBarStates.setSnackBarOpen(true)\r\n              topSnackBarStates.setSnackBarType('warning')\r\n          }\r\n        }).catch((err) => {\r\n          topSnackBarStates.setSnackBarMessage(`删除失败,${err}`)\r\n          topSnackBarStates.setSnackBarOpen(true)\r\n          topSnackBarStates.setSnackBarType('error')\r\n        })\r\n      // 删除成功之后马上回到原来的地方，重新加载一次\r\n      navi('/fileshare')\r\n      break;\r\n      case 'share':\r\n        bottomeDrawerStates.setBottomDrawerOpen(false)\r\n        if(states.files[index].isAllow != 1){\r\n          Toast.warning(\"当前病历并未分配共享权限，请联系共享来源用户\")\r\n          break;\r\n        }\r\n        navi('/policymanage/create', { state: states.files[index]})//传入Id值\r\n        break;\r\n      case 'open':\r\n        bottomeDrawerStates.setBottomDrawerOpen(false)\r\n        navi('/pdfpreview', { state: SharedFileToFileItemData(index, states.files[index]) })//传入Id值\r\n        break;\r\n      case 'detail':\r\n        bottomeDrawerStates.setBottomDrawerOpen(false)\r\n        navi('/fileshare/details', {state:states.files[index]})\r\n        break;\r\n    }\r\n  }\r\n  const onOperationClicked = (index: number) => {\r\n    const validNum = states.files[index].useLimit - states.files[index].use\r\n    console.log(\"文件过期时间\",states.files[index].expire)\r\n    console.log(\"当前时间\",new Date().getTime())\r\n    if(states.files[index].expire < new Date().getTime()){\r\n        Toast.warning(\"该文件已过期，请联系病历拥有者\")\r\n        return;\r\n    }\r\n    if(validNum <= 0){\r\n      Toast.warning(\"该文件已被使用完毕，请联系文件拥有者\")\r\n      return;\r\n    }\r\n    bottomeDrawerStates.setBottomDrawerOpen(true)\r\n    bottomeDrawerStates.setBottomDrawerContent(\r\n      <ShredByMeFileOperationMenu fileName={states.files[index].fileName} onOperationClicked={(ty) => handleFileOperation(ty, index)} />\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Fade in={true}>\r\n      <Box>\r\n        <VerticalList items={states.files?.map((SharedItems, index) => {\r\n          return <FileItem\r\n            key={index}\r\n            fileName={SharedItems.fileName}\r\n            fileTime={toLocalTimeString(SharedItems.expire)}\r\n            fileSize={sizeToString(SharedItems.fileSize)}\r\n            remainUse={SharedItems.useLimit - SharedItems.use}\r\n            sharedContent={<FileState state={'shared'} />}\r\n            onOperationClicked={() => onOperationClicked(index)} />\r\n        })} onItemClicked={onOperationClicked} />\r\n      </Box>\r\n    </Fade>\r\n  )\r\n}\r\nexport default SharedByMeWrapper\r\n","import SharedByMeWrapper from '../../components/file-share/shared-by-me/SharedByMe';\r\nimport { Provider } from 'reto';\r\nimport { SharedByMeStore } from 'src/states/page/file-share/sharedbyme';\r\nconst SharedByMePage = () => {\r\n    return (\r\n        <Provider of={SharedByMeStore}>\r\n            <SharedByMeWrapper />\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default SharedByMePage\r\n","import * as React from 'react';\nimport createSvgIcon from './utils/createSvgIcon';\nexport default createSvgIcon( /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M6 19c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6v12zM19 4h-3.5l-1-1h-5l-1 1H5v2h14V4z\"\n}), 'Delete');"],"names":["SharedByMeStore","loadingStore","useStore","LoadingStore","confirmDeleteDialogStore","ConfirmDeleteDialogStore","useState","files","setFiles","fileName","onOperationClicked","Stack","m","Box","borderRadius","SimpleFileItem","Section","title","VerticalList","items","OperationItem","icon","FolderArrowUp","fontSize","name","onclick","Share","Delete","ErrorOutline","navi","useNavigate","states","topSnackBarStates","SnackBarStore","bottomeDrawerStates","BottomDrawerStore","useEffect","myShareFile","then","res","code","Array","isArray","data","map","item","idx","id","fileSize","state","target","use","useLimit","expire","isAllow","setLoading","index","validNum","console","log","Date","getTime","Toast","setBottomDrawerOpen","setBottomDrawerContent","ty","deleteSharingFile","setSnackBarMessage","setSnackBarOpen","setSnackBarType","message","catch","err","SharedFileToFileItemData","handleFileOperation","Fade","in","SharedItems","FileItem","fileTime","toLocalTimeString","sizeToString","remainUse","sharedContent","FileState","onItemClicked","of","SharedByMe","createSvgIcon","React","d"],"sourceRoot":""}