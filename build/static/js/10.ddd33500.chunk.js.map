{"version":3,"file":"static/js/10.ddd33500.chunk.js","mappings":"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","sources":["components/common/LoadingProgress/index.tsx","components/pdf-preview/index.tsx","pages/pdf-preview/index.tsx","service/medic.ts","states/page/file-share/index.ts","utils/time.ts"],"sourcesContent":["import { Box, CircularProgress, Skeleton } from \"@mui/material\"\r\nimport { ReactNode } from \"react\"\r\nimport { LoadingProps } from \"src/types/ComponentProps\"\r\n\r\n\r\nconst Loading = ({ loading, children }: LoadingProps) => {\r\n    if (loading) {\r\n        return <CircularProgress sx={{\r\n            position: 'absolute', left: '50%', top: '50%', transform: 'translate(-50%,-50%)'\r\n        }} />\r\n    }\r\n    else {\r\n        return <>{children}</>\r\n    }\r\n}\r\n\r\nexport default Loading\r\n","// ** MUI Imports\r\n\r\n// ** Demo Components Imports\r\nimport { Box, Stack } from '@mui/material';\r\nimport { Container } from '@mui/system';\r\nimport { useEffect, useState } from 'react';\r\nimport PDF from \"react-pdf-js\";\r\nimport Loading from '../common/LoadingProgress';\r\nimport './styles.css';\r\nimport { downloadFile } from 'src/service/medic';\r\nimport { FileItemData } from 'src/types/ComponentProps';\r\nimport { toLocalTimeString } from 'src/utils/time';\r\nconst PdfPreviewWrapper = (props) => {\r\n  const [pdfblob, setPdfBlob] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [totalPage, setTotalPages] = useState(1);\r\n  const fileData = props.file as FileItemData\r\n  useEffect(() => {\t//重点在此！！！！！如何将PDF文件流转base64\r\n    downloadFile(fileData.name).then(res => {\r\n      console.log(res)\r\n      let blob = new Blob([res], { type: \"application/pdf\" })\r\n      let reader = new FileReader();\r\n      reader.readAsDataURL(blob); // 转换为base64，可以直接放入a标签href\r\n      reader.addEventListener(\"load\", function () {\r\n        let base64 = reader.result as string\r\n        setPdfBlob(base64.split(',')[1])\r\n        setLoading(false)\r\n      });\r\n    })\r\n  }, []);\r\n  let newpdfblob = \"data:application/pdf;base64,\" + pdfblob\r\n  if (!pdfblob) return null\r\n\r\n  function onDocumentLoadSuccess(totalPage: any) {\r\n    console.log(totalPage)\r\n    setTotalPages(totalPage);\r\n  }\r\n\r\n  function directlyRenderPdf(totalPage: number) {\r\n    const x = [];\r\n    for (let i = 2; i <= totalPage; i++) {\r\n      x.push(\r\n        <Box key={i} justifyContent={'center'} display='flex' sx={{ objectFit: 'contain' }}>\r\n          <PDF workerSrc='pdf.worker.js' page={i} key={`x${i}`} scale={0.8} file={newpdfblob} />\r\n        </Box>)\r\n      x.push(<Box justifyContent={'center'} key={`c${i}`} display='flex'>{i}</Box>)\r\n    }\r\n    return x;\r\n  }\r\n\r\n  if (!pdfblob) return null\r\n  return (\r\n    <Loading loading={loading}>\r\n      <Container>\r\n        <Stack spacing={1} alignContent='center' pt={3} pb={3}>\r\n          <Box justifyContent={'center'} display='flex'>{`过期时间:${toLocalTimeString(fileData.expire)}`}</Box>\r\n          <Box justifyContent={'center'} display='flex'>{`剩余使用次数:${fileData.useLimit - fileData.use - 1}`}</Box>\r\n          <Box justifyContent={'center'} display='flex' sx={{ objectFit: 'contain' }}>\r\n            <PDF scale={0.8}\r\n              workerSrc='pdf.worker.js'\r\n              file={newpdfblob}\r\n              onDocumentComplete={onDocumentLoadSuccess}\r\n              page={1} />\r\n          </Box>\r\n          <Box justifyContent={'center'} display='flex'>1</Box>\r\n          {\r\n            totalPage > 1 && directlyRenderPdf(totalPage)\r\n          }\r\n        </Stack>\r\n      </Container>\r\n    </Loading>\r\n  );\r\n}\r\n\r\nexport default PdfPreviewWrapper\r\n","// ** MUI Imports\r\n\r\n// ** Demo Components Imports\r\nimport PdfPreviewWrapper from 'src/components/pdf-preview'\r\nimport { Provider } from 'reto'\r\nimport { ConfirmDeleteDialogStore } from 'src/states/common/ConfirmDeleteDialogStore'\r\nimport { LoadingStore } from 'src/states/common/LoadingStore'\r\nimport { FileSharePageStore } from 'src/states/page/file-share'\r\nimport { useLocation } from \"react-router-dom\";\r\nimport { FileItemData } from 'src/types/ComponentProps'\r\nconst PdfPreviewPage = () => {\r\n  const location = useLocation();\r\n  const file = (location.state as FileItemData);\r\n  document.querySelector('meta[name=\"viewport\"]').setAttribute('content', 'width=device-width, initial-scale=1.0');\r\n  return (\r\n    <Provider of={LoadingStore} memo>\r\n      <Provider of={ConfirmDeleteDialogStore} memo>\r\n        <Provider of={FileSharePageStore} memo>\r\n          <PdfPreviewWrapper file={file} />\r\n        </Provider>\r\n      </Provider>\r\n    </Provider>\r\n  )\r\n}\r\n\r\nexport default PdfPreviewPage\r\n","import axios from \"axios\";\r\nimport { ServiceResponse } from \"./common\";\r\nimport { FileItemData } from \"src/types/ComponentProps\";\r\nimport { number } from 'prop-types';\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface ShareParam\r\n */\r\nexport interface ShareParam {\r\n    /**\r\n     * \r\n     * @type {string}\r\n     * @memberof ShareParam\r\n     */\r\n    fileName: string;\r\n    /**\r\n     * \r\n     * @type {string}\r\n     * @memberof ShareParam\r\n     */\r\n    target: string;\r\n    /**\r\n     * \r\n     * @type {number}\r\n     * @memberof ShareParam\r\n     */\r\n    expire: number;\r\n    /**\r\n     * \r\n     * @type {number}\r\n     * @memberof ShareParam\r\n     */\r\n    useLimit: number;\r\n    /**\r\n     * \r\n     * @type {boolean}\r\n     * @memberof ShareParam\r\n     */\r\n    isGroup: boolean;\r\n}\r\n\r\n/**\r\n * \r\n * @export\r\n * @interface SharedFile\r\n */\r\nexport interface SharedFile {\r\n    /**\r\n     * \r\n     * @type {string}\r\n     * @memberof SharedFile\r\n     */\r\n    fileName: string;\r\n    /**\r\n     * \r\n     * @type {number}\r\n     * @memberof SharedFile\r\n     */\r\n    fileSize: number;\r\n    /**\r\n     * \r\n     * @type {string}\r\n     * @memberof SharedFile\r\n     */\r\n    target: string;\r\n    /**\r\n     * \r\n     * @type {number}\r\n     * @memberof SharedFile\r\n     */\r\n    expire: number;\r\n    /**\r\n     * \r\n     * @type {number}\r\n     * @memberof SharedFile\r\n     */\r\n    useLimit: number;\r\n    /**\r\n     * \r\n     * @type {boolean}\r\n     * @memberof SharedFile\r\n     */\r\n    isGroup: boolean;\r\n    /**\r\n     * \r\n     * @type {number}\r\n     * @memberof SharedFile\r\n     */\r\n    use: number;\r\n}\r\n\r\nexport interface LoginResult {\r\n    token: string\r\n}\r\nexport interface Login {\r\n    username: string\r\n    password: string\r\n}\r\n// {\r\n//     \"fileName\": \"string\",\r\n//     \"owner\": \"string\",\r\n//     \"expire\": 0,\r\n//     \"use\": 0,\r\n//     \"useLimit\": 0,\r\n//     \"fileSize\": 0\r\n// }\r\nexport interface File {\r\n    fileName: string,\r\n    owner: string,\r\n    expire: number,\r\n    use: number,\r\n    useLimit: number,\r\n    fileSize: number\r\n}\r\n\r\nexport function FileToFileItemData(idx: number, item: File): FileItemData {\r\n    const owner = localStorage.getItem('username')\r\n    return {\r\n        id: idx,\r\n        name: item.fileName,\r\n        size: item.fileSize,\r\n        state: owner == item.owner ? 'owned' : 'fromShared',\r\n        owner: item.owner,\r\n        use: item.use,\r\n        useLimit: item.useLimit,\r\n        expire: item.expire\r\n    }\r\n}\r\nexport function SharedFileToFileItemData(idx: number, item: SharedFile): FileItemData {\r\n    const owner = localStorage.getItem('username')\r\n    return {\r\n        id: idx,\r\n        name: item.fileName,\r\n        size: item.fileSize,\r\n        state: owner == item.target ? 'owned' : 'fromShared',\r\n        owner: item.target,\r\n        use: item.use,\r\n        useLimit: item.useLimit,\r\n        expire: item.expire\r\n    }\r\n}\r\n/**\r\n *\r\n * @export\r\n * @interface LoginResultResponse\r\n */\r\nexport const login = async (userName: string, passWord: string): Promise<ServiceResponse<LoginResult>> => {\r\n    const res = await axios.post('/login', { userName, passWord })\r\n    return res.data\r\n}\r\n\r\n\r\n/**\r\n *\r\n * @export\r\n * @interface LoginResultResponse\r\n */\r\nexport const getFileList = async (): Promise<ServiceResponse<Array<File>>> => {\r\n    const res = await axios.get('/file', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\r\n    return res.data\r\n}\r\nexport const getUserList = async (): Promise<ServiceResponse<Array<string>>> => {\r\n    const res = await axios.get('/user', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\r\n    return res.data\r\n}\r\n\r\n/**\r\n *\r\n * @export\r\n * @interface LoginResultResponse\r\n */\r\n// 上传数据\r\nexport const shareFile = async (param: ShareParam): Promise<ServiceResponse<undefined>> => {\r\n    const res = await axios.post('/file/share', param, { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\r\n    return res.data\r\n}\r\n// 获取数据\r\nexport const myShareFile = async (): Promise<ServiceResponse<Array<SharedFile>>> => {\r\n    const res = await axios.get('/file/share', { headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\r\n    return res.data\r\n}\r\n// 根据文件名称下载文件\r\nexport const downloadFile = async (fileName: string): Promise<any> => {\r\n    const res = await axios.get(`/file/download?filename=${fileName}`, { responseType: 'blob', headers: { 'Authorization': `Bearer ${localStorage.getItem('token')}` } })\r\n    return res.data\r\n}\r\n","import { Dispatch, SetStateAction, useState } from 'react'\r\nimport { useStore } from 'reto'\r\nimport { Tunnel } from 'src/service/models'\r\nimport { ConfirmDeleteDialogStore } from 'src/states/common/ConfirmDeleteDialogStore'\r\nimport { LoadingStore } from 'src/states/common/LoadingStore'\r\n\r\n\r\n// 新建数据通\r\n\r\nexport interface FileSharePageStates {\r\n  rows: Tunnel[]\r\n  editorDialogOpen: boolean\r\n  updateDialogOpen: boolean\r\n}\r\n\r\nexport interface FileSharePageStore\r\n  extends FileSharePageStates,\r\n  LoadingStore,\r\n  ConfirmDeleteDialogStore {\r\n  setRows: Dispatch<SetStateAction<Tunnel[]>>\r\n  setEditorDialogOpen: Dispatch<SetStateAction<boolean>>\r\n  setUpdateDialogOpen: Dispatch<SetStateAction<boolean>>\r\n}\r\n\r\nexport function FileSharePageStore(): FileSharePageStore {\r\n  const loadingStore = useStore(LoadingStore)\r\n  const confirmDeleteDialogStore = useStore(ConfirmDeleteDialogStore)\r\n  const [rows, setRows] = useState<Tunnel[]>([])\r\n  const [editorDialogOpen, setEditorDialogOpen] = useState(false)\r\n  const [updateDialogOpen, setUpdateDialogOpen] = useState(false)\r\n  return {\r\n    ...loadingStore,\r\n    ...confirmDeleteDialogStore,\r\n    rows,\r\n    setRows,\r\n    editorDialogOpen,\r\n    setEditorDialogOpen,\r\n    updateDialogOpen,\r\n    setUpdateDialogOpen\r\n  }\r\n}\r\n","//transfrom unix time stamp to date string\r\nexport function toLocalTimeString(unixTime: number): string {\r\n    const date = new Date(unixTime);\r\n    return date.toLocaleString();\r\n}\r\n"],"names":["loading","children","CircularProgress","sx","position","left","top","transform","props","useState","pdfblob","setPdfBlob","setLoading","totalPage","setTotalPages","fileData","file","useEffect","downloadFile","name","then","res","console","log","blob","Blob","type","reader","FileReader","readAsDataURL","addEventListener","base64","result","split","newpdfblob","Container","Stack","spacing","alignContent","pt","pb","Box","justifyContent","display","toLocalTimeString","expire","useLimit","use","objectFit","scale","workerSrc","onDocumentComplete","page","x","i","push","directlyRenderPdf","useLocation","state","document","querySelector","setAttribute","of","LoadingStore","memo","ConfirmDeleteDialogStore","FileSharePageStore","FileToFileItemData","idx","item","owner","localStorage","getItem","id","fileName","size","fileSize","SharedFileToFileItemData","target","login","userName","passWord","axios","data","getFileList","headers","getUserList","shareFile","param","myShareFile","responseType","loadingStore","useStore","confirmDeleteDialogStore","rows","setRows","editorDialogOpen","setEditorDialogOpen","updateDialogOpen","setUpdateDialogOpen","unixTime","Date","toLocaleString"],"sourceRoot":""}